{"version":3,"file":"background.js","mappings":";;AAAA;AACA;AACA;;;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://tracy/webpack/bootstrap","webpack://tracy/webpack/runtime/make namespace object","webpack://tracy/./src/background/background.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","chrome.action.onClicked.addListener(function (tab) {\n    chrome.tabs.create({\n        url: chrome.runtime.getURL(\"popup.html\"),\n        active: true,\n    });\n});\nlet tabHistory = [];\nfunction updatePopup() {\n    // Send tab history to popup script\n    chrome.runtime.sendMessage({\n        action: \"update\",\n        tabHistory: tabHistory,\n    }, function (response) {\n        console.log(response);\n    });\n}\nchrome.tabs.query({}, function (tabs) {\n    // On extension startup, include all existing tabs\n    tabHistory = tabs.map((tab) => ({ type: \"existing\", tab }));\n    updatePopup();\n});\nchrome.tabs.onCreated.addListener(function (newTab) {\n    // tabHistory.push({ type: \"created\", tab });\n    // updatePopup();\n    tabHistory.push({ type: \"created\", tab: newTab });\n    updatePopup();\n});\nchrome.tabs.onUpdated.addListener(function (tabId, changeInfo, tab) {\n    const index = tabHistory.findIndex((item) => item.tab.id === tabId);\n    if (index !== -1) {\n        // If tab already exists in history, update it\n        tabHistory[index] = { type: \"updated\", tab };\n    }\n    else {\n        // If tab is not in history, add it as an existing tab\n        tabHistory.push({ type: \"existing\", tab });\n    }\n    updatePopup();\n});\nexport {};\n"],"names":[],"sourceRoot":""}